---
- name: Kibana apt repo
  apt_repository:
    repo="deb http://packages.elastic.co/kibana/{{ elk_kibana.version }}/{{ ansible_os_family|lower }} stable main"
    update_cache=yes
  when: ansible_os_family == 'Debian'
  sudo: yes

- name: Install kibana apt packages
  apt: pkg={{ item }} update_cache=yes state=present
  with_items:
   - kibana
  sudo: yes
  when: ansible_os_family == 'Debian'
  notify: Restart logstash

- name: Uncompressed Kibana linked to path
  file:
    src=/opt/kibana-{{ elk_kibana.version }}
    path={{ elk_kibana.path }} state=link
    owner={{ elk_nginx.user }} group={{ elk_nginx.user }}
  sudo: yes

- name: Kibana files ownership
  file:
    path=/opt/kibana-{{ elk_kibana.version }}
    state=directory
    owner={{ elk_nginx.user }} group={{ elk_nginx.user }} recurse=yes
  changed_when: False
  sudo: yes

- name: Supervisor config file
  template:
    src=kibana-supervisor.j2
    dest=/etc/supervisor/conf.d/kibana.conf
    owner=root group=root mode=644
  sudo: yes
  notify: Restart supervisor

- name: Generate kibana htpassword
  shell:
    echo "{{ elk_kibana.user }}:$(openssl passwd -crypt {{ elk_kibana.password }}):kibana" |tee .kibana.htpasswd
  args:
    chdir: /etc/nginx/conf.d
    creates: /etc/nginx/conf.d/.kibana.htpasswd
  sudo: yes
  register: http_pass_gen
  when: elk_kibana.user is defined and elk_kibana.password is defined

- name: Kibana htpassword file permissions
  file:
    path=/etc/nginx/conf.d/.kibana.htpasswd
    owner={{ elk_nginx.user }} group=root mode=400
  sudo: yes
  when: http_pass_gen|changed
    
- name: Nginx config file
  template:
    src=kibana-default.j2
    dest=/etc/nginx/conf.d/kibana.conf
    owner=root group=root mode=644
  sudo: yes
  notify: Restart nginx
